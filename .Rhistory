IV_supp <- data.frame(model@frame[,c(col_selected2)])
DV =  model@frame[,as.character(formula(model)[[2]])]
cat_i = data.frame(model@frame[,random.labels])
weighting_var = data.frame(fusion[,c(cnames,"W_e")])
if(ncol(IV_supp)>0){
for(i in 1: dim(IV_supp)[2]){
if(is.factor(IV_supp[,i])){
for(j in 1:dim(weighting_var)[2]){
for(k in 1:dim(cat_i)[2]){
dataplot<-data.frame(
X =cat_i[,k],
W = weighting_var[,j],
panel_var = IV_supp[,i])
W_names = c(cnames,"W_e")
titleplot = paste0(as.character(formula(model)[[2]])," by ",random.labels[k]," and ",W_names[j])
gg<-ggplot(dataplot,aes(x=X,y=DV,color=W)) +
geom_violin(trim=F)+
geom_jitter()+
facet_grid(.~panel_var)+
scale_color_continuous(limits = c(0,1), guide = guide_legend(reverse = T))+
ggtitle(titleplot)+
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x =element_text(size = 12),
axis.text.y.left = element_text(size = 12),
axis.title.x = element_text(size=12),
plot.title = element_text(size=12),
strip.text.y = element_text(size = 12),
panel.background = element_rect(fill = "white",
colour = "grey26",
size = 0.5, linetype = "solid"))
print(gg)
readline(prompt = "Press [Enter] to continue")
}
}
}else{
for(j in 1:dim(weighting_var)[2]){
for(k in 1:dim(cat_i)[2]){
dataplot<-data.frame(
panel_var =cat_i[,i],
W = weighting_var[,j],
X = cat_i[,k])
W_names = c(cnames,"W_e")
titleplot = paste0(as.character(formula(model)[[2]])," by ",random.labels[k]," and ",W_names[j])
gg<-ggplot(dataplot,aes(x=X,y=DV,color=W, group =panel_var)) +
geom_line()+
geom_point()+
scale_color_continuous(limits = c(0,1), guide = guide_legend(reverse = T))+
labs(x="continuous predictor")+
ggtitle(titleplot)+
theme(legend.position = "bottom",
axis.text.x =element_text(size=12),
axis.text.y.left = element_text(size = 12),
axis.title.x =element_text(size=12),
plot.title = element_text(size=12),
strip.text.y = element_text(size = 12),
panel.background = element_rect(fill = "white",
colour = "grey26",
size = 0.5, linetype = "solid"))
print(gg)
readline(prompt = "Press [Enter] to continue")
}
}
}
}
}else{
for(j in 1:dim(weighting_var)[2]){
for(k in 1:dim(cat_i)[2]){
dataplot<-data.frame(
X =cat_i[,k],
W = weighting_var[,j])
W_names = c(cnames,"W_e")
titleplot = paste0(as.character(formula(model)[[2]])," by ",random.labels[k]," and ",W_names[j])
gg<-ggplot(dataplot,aes(x=X,y=DV,color=W)) +
geom_violin(trim=F)+
geom_jitter()+
scale_color_continuous(limits = c(0,1), guide = guide_legend(reverse = T))+
ggtitle(titleplot)+
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x =element_text(size = 12),
axis.text.y.left = element_text(size = 12),
axis.title.x = element_text(size=12),
plot.title = element_text(size=12),
strip.text.y = element_text(size = 12),
panel.background = element_rect(fill = "white",
colour = "grey26",
size = 0.5, linetype = "solid"))
print(gg)
readline(prompt = "Press [Enter] to continue")
}
}
}
}
plot.weights(fusion, model0.rob)
plot.weights(fusiongroup, model_group.rob)
col_selected2
col_selected2
col_selected2
col_selected2
col_selected2
col_selected2
col_selected2
col_selected2
col_selected2
col_selected2
col_selected2
col_selected1 <- setdiff(colnames(model@frame),random.labels)
col_selected2 <- setdiff(col_selected1,as.character(formula(model)[[2]]))
col_selected2
randomlab<-random.labels[i]
random_i<-cbind(levels(model@frame[,randomlab]),as.data.frame(getME(model,"w_b")[i]))
cnames_i<-paste0("W_",randomlab)
colnames(random_i)<-c(randomlab,paste0("W_",randomlab))
cnames<-c(cnames,cnames_i)
random.labels=names(ranef(model))
cnames<-NULL
for(i in 1:length(random.labels)){
randomlab<-random.labels[i]
random_i<-cbind(levels(model@frame[,randomlab]),as.data.frame(getME(model,"w_b")[i]))
cnames_i<-paste0("W_",randomlab)
colnames(random_i)<-c(randomlab,paste0("W_",randomlab))
cnames<-c(cnames,cnames_i)
}
col_selected1 <- setdiff(colnames(model@frame),random.labels)
col_selected2 <- setdiff(col_selected1,as.character(formula(model)[[2]]))
col_selected2
plot.weights<-function(dataset, model){
random.labels=names(ranef(model))
cnames<-NULL
for(i in 1:length(random.labels)){
randomlab<-random.labels[i]
random_i<-cbind(levels(model@frame[,randomlab]),as.data.frame(getME(model,"w_b")[i]))
cnames_i<-paste0("W_",randomlab)
colnames(random_i)<-c(randomlab,paste0("W_",randomlab))
cnames<-c(cnames,cnames_i)
}
col_selected1 <- setdiff(colnames(model@frame),random.labels)
col_selected2 <- setdiff(col_selected1,as.character(formula(model)[[2]]))
IV_supp <- data.frame(model@frame[,c(col_selected2)])
DV =  model@frame[,as.character(formula(model)[[2]])]
cat_i = data.frame(model@frame[,random.labels])
weighting_var = data.frame(fusion[,c(cnames,"W_e")])
if(ncol(IV_supp)>0){
for(i in 1: dim(IV_supp)[2]){
if(is.factor(IV_supp[,i])){
for(j in 1:dim(weighting_var)[2]){
for(k in 1:dim(cat_i)[2]){
dataplot<-data.frame(
X =cat_i[,k],
W = weighting_var[,j],
panel_var = IV_supp[,i])
W_names = c(cnames,"W_e")
titleplot = paste0(as.character(formula(model)[[2]])," by ",col_selected2[i],", ",random.labels[k]," and ",W_names[j])
gg<-ggplot(dataplot,aes(x=X,y=DV,color=W)) +
geom_violin(trim=F)+
geom_jitter()+
facet_grid(.~panel_var)+
scale_color_continuous(limits = c(0,1), guide = guide_legend(reverse = T))+
ggtitle(titleplot)+
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x =element_text(size = 12),
axis.text.y.left = element_text(size = 12),
axis.title.x = element_text(size=12),
plot.title = element_text(size=12),
strip.text.y = element_text(size = 12),
panel.background = element_rect(fill = "white",
colour = "grey26",
size = 0.5, linetype = "solid"))
print(gg)
readline(prompt = "Press [Enter] to continue :")
}
}
}else{
for(j in 1:dim(weighting_var)[2]){
for(k in 1:dim(cat_i)[2]){
dataplot<-data.frame(
panel_var =cat_i[,i],
W = weighting_var[,j],
X = cat_i[,k])
W_names = c(cnames,"W_e")
titleplot = paste0(as.character(formula(model)[[2]])," by ",col_selected2[i],", ",random.labels[k]," and ",W_names[j])
gg<-ggplot(dataplot,aes(x=X,y=DV,color=W, group =panel_var)) +
geom_line()+
geom_point()+
scale_color_continuous(limits = c(0,1), guide = guide_legend(reverse = T))+
labs(x="continuous predictor")+
ggtitle(titleplot)+
theme(legend.position = "bottom",
axis.text.x =element_text(size=12),
axis.text.y.left = element_text(size = 12),
axis.title.x =element_text(size=12),
plot.title = element_text(size=12),
strip.text.y = element_text(size = 12),
panel.background = element_rect(fill = "white",
colour = "grey26",
size = 0.5, linetype = "solid"))
print(gg)
readline(prompt = "Press [Enter] to continue :")
}
}
}
}
}else{
for(j in 1:dim(weighting_var)[2]){
for(k in 1:dim(cat_i)[2]){
dataplot<-data.frame(
X =cat_i[,k],
W = weighting_var[,j])
W_names = c(cnames,"W_e")
titleplot = paste0(as.character(formula(model)[[2]])," by ",random.labels[k]," and ",W_names[j])
gg<-ggplot(dataplot,aes(x=X,y=DV,color=W)) +
geom_violin(trim=F)+
geom_jitter()+
scale_color_continuous(limits = c(0,1), guide = guide_legend(reverse = T))+
ggtitle(titleplot)+
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x =element_text(size = 12),
axis.text.y.left = element_text(size = 12),
axis.title.x = element_text(size=12),
plot.title = element_text(size=12),
strip.text.y = element_text(size = 12),
panel.background = element_rect(fill = "white",
colour = "grey26",
size = 0.5, linetype = "solid"))
print(gg)
readline(prompt = "Press [Enter] to continue :")
}
}
}
}
plot.weights(fusion, model0.rob)
random.labels[k]
plot.weights<-function(dataset, model){
random.labels=names(ranef(model))
cnames<-NULL
for(i in 1:length(random.labels)){
randomlab<-random.labels[i]
random_i<-cbind(levels(model@frame[,randomlab]),as.data.frame(getME(model,"w_b")[i]))
cnames_i<-paste0("W_",randomlab)
colnames(random_i)<-c(randomlab,paste0("W_",randomlab))
cnames<-c(cnames,cnames_i)
}
col_selected1 <- setdiff(colnames(model@frame),random.labels)
col_selected2 <- setdiff(col_selected1,as.character(formula(model)[[2]]))
IV_supp <- data.frame(model@frame[,c(col_selected2)])
DV =  model@frame[,as.character(formula(model)[[2]])]
cat_i = data.frame(model@frame[,random.labels])
weighting_var = data.frame(fusion[,c(cnames,"W_e")])
if(ncol(IV_supp)>0){
for(i in 1: dim(IV_supp)[2]){
if(is.factor(IV_supp[,i])){
for(j in 1:dim(weighting_var)[2]){
for(k in 1:dim(cat_i)[2]){
dataplot<-data.frame(
X =cat_i[,k],
W = weighting_var[,j],
panel_var = IV_supp[,i])
W_names = c(cnames,"W_e")
titleplot = paste0(as.character(formula(model)[[2]])," by ",col_selected2[i],", ",random.labels[k]," and ",W_names[j])
gg<-ggplot(dataplot,aes(x=X,y=DV,color=W)) +
geom_violin(trim=F)+
geom_jitter()+
facet_grid(.~panel_var)+
scale_color_continuous(limits = c(0,1), guide = guide_legend(reverse = T))+
xlab(random.labels[k])+
ggtitle(titleplot)+
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x =element_text(size = 12),
axis.text.y.left = element_text(size = 12),
axis.title.x = element_text(size=12),
plot.title = element_text(size=12),
strip.text.y = element_text(size = 12),
panel.background = element_rect(fill = "white",
colour = "grey26",
size = 0.5, linetype = "solid"))
print(gg)
readline(prompt = "Press [Enter] to continue :")
}
}
}else{
for(j in 1:dim(weighting_var)[2]){
for(k in 1:dim(cat_i)[2]){
dataplot<-data.frame(
panel_var =cat_i[,i],
W = weighting_var[,j],
X = cat_i[,k])
W_names = c(cnames,"W_e")
titleplot = paste0(as.character(formula(model)[[2]])," by ",col_selected2[i],", ",random.labels[k]," and ",W_names[j])
gg<-ggplot(dataplot,aes(x=X,y=DV,color=W, group =panel_var)) +
geom_line()+
geom_point()+
scale_color_continuous(limits = c(0,1), guide = guide_legend(reverse = T))+
labs(x="continuous predictor")+
xlab(random.labels[k])+
ggtitle(titleplot)+
theme(legend.position = "bottom",
axis.text.x =element_text(size=12),
axis.text.y.left = element_text(size = 12),
axis.title.x =element_text(size=12),
plot.title = element_text(size=12),
strip.text.y = element_text(size = 12),
panel.background = element_rect(fill = "white",
colour = "grey26",
size = 0.5, linetype = "solid"))
print(gg)
readline(prompt = "Press [Enter] to continue :")
}
}
}
}
}else{
for(j in 1:dim(weighting_var)[2]){
for(k in 1:dim(cat_i)[2]){
dataplot<-data.frame(
X =cat_i[,k],
W = weighting_var[,j])
W_names = c(cnames,"W_e")
titleplot = paste0(as.character(formula(model)[[2]])," by ",random.labels[k]," and ",W_names[j])
gg<-ggplot(dataplot,aes(x=X,y=DV,color=W)) +
geom_violin(trim=F)+
geom_jitter()+
scale_color_continuous(limits = c(0,1), guide = guide_legend(reverse = T))+
ggtitle(titleplot)+
xlab(random.labels[k])+
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x =element_text(size = 12),
axis.text.y.left = element_text(size = 12),
axis.title.x = element_text(size=12),
plot.title = element_text(size=12),
strip.text.y = element_text(size = 12),
panel.background = element_rect(fill = "white",
colour = "grey26",
size = 0.5, linetype = "solid"))
print(gg)
readline(prompt = "Press [Enter] to continue :")
}
}
}
}
plot.weights(fusioncovar, model_covar.rob)
plot.weights<-function(dataset, model){
random.labels=names(ranef(model))
cnames<-NULL
for(i in 1:length(random.labels)){
randomlab<-random.labels[i]
random_i<-cbind(levels(model@frame[,randomlab]),as.data.frame(getME(model,"w_b")[i]))
cnames_i<-paste0("W_",randomlab)
colnames(random_i)<-c(randomlab,paste0("W_",randomlab))
cnames<-c(cnames,cnames_i)
}
col_selected1 <- setdiff(colnames(model@frame),random.labels)
col_selected2 <- setdiff(col_selected1,as.character(formula(model)[[2]]))
IV_supp <- data.frame(model@frame[,c(col_selected2)])
DV =  model@frame[,as.character(formula(model)[[2]])]
cat_i = data.frame(model@frame[,random.labels])
weighting_var = data.frame(fusion[,c(cnames,"W_e")])
if(ncol(IV_supp)>0){
for(i in 1: dim(IV_supp)[2]){
if(is.factor(IV_supp[,i])){
for(j in 1:dim(weighting_var)[2]){
for(k in 1:dim(cat_i)[2]){
dataplot<-data.frame(
X =cat_i[,k],
W = weighting_var[,j],
panel_var = IV_supp[,i])
W_names = c(cnames,"W_e")
titleplot = paste0(as.character(formula(model)[[2]])," by ",col_selected2[i],", ",random.labels[k]," and ",W_names[j])
gg<-ggplot(dataplot,aes(x=X,y=DV,color=W)) +
geom_violin(trim=F)+
geom_jitter()+
facet_grid(.~panel_var)+
scale_color_continuous(limits = c(0,1), guide = guide_legend(reverse = T))+
xlab(random.labels[k])+
ggtitle(titleplot)+
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x =element_text(size = 12),
axis.text.y.left = element_text(size = 12),
axis.title.x = element_text(size=12),
plot.title = element_text(size=12),
strip.text.y = element_text(size = 12),
panel.background = element_rect(fill = "white",
colour = "grey26",
size = 0.5, linetype = "solid"))
print(gg)
readline(prompt = "Press [Enter] to continue :")
}
}
}else{
for(j in 1:dim(weighting_var)[2]){
for(k in 1:dim(cat_i)[2]){
dataplot<-data.frame(
panel_var =cat_i[,k],
W = weighting_var[,j],
X = IV_supp[,i])
W_names = c(cnames,"W_e")
titleplot = paste0(as.character(formula(model)[[2]])," by ",col_selected2[i],", ",random.labels[k]," and ",W_names[j])
gg<-ggplot(dataplot,aes(x=X,y=DV,color=W, group =panel_var)) +
geom_line()+
geom_point()+
scale_color_continuous(limits = c(0,1), guide = guide_legend(reverse = T))+
xlab(col_selected2[i])+
ggtitle(titleplot)+
theme(legend.position = "bottom",
axis.text.x =element_text(size=12),
axis.text.y.left = element_text(size = 12),
axis.title.x =element_text(size=12),
plot.title = element_text(size=12),
strip.text.y = element_text(size = 12),
panel.background = element_rect(fill = "white",
colour = "grey26",
size = 0.5, linetype = "solid"))
print(gg)
readline(prompt = "Press [Enter] to continue :")
}
}
}
}
}else{
for(j in 1:dim(weighting_var)[2]){
for(k in 1:dim(cat_i)[2]){
dataplot<-data.frame(
X =cat_i[,k],
W = weighting_var[,j])
W_names = c(cnames,"W_e")
titleplot = paste0(as.character(formula(model)[[2]])," by ",random.labels[k]," and ",W_names[j])
gg<-ggplot(dataplot,aes(x=X,y=DV,color=W)) +
geom_violin(trim=F)+
geom_jitter()+
scale_color_continuous(limits = c(0,1), guide = guide_legend(reverse = T))+
ggtitle(titleplot)+
xlab(random.labels[k])+
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x =element_text(size = 12),
axis.text.y.left = element_text(size = 12),
axis.title.x = element_text(size=12),
plot.title = element_text(size=12),
strip.text.y = element_text(size = 12),
panel.background = element_rect(fill = "white",
colour = "grey26",
size = 0.5, linetype = "solid"))
print(gg)
readline(prompt = "Press [Enter] to continue :")
}
}
}
}
plot.weights(fusioncovar, model_covar.rob)
library(readxl)
data_Stroop_RT <- read_excel("H:/Recherches/Marina/dataclean/data_Stroop_RT.xlsx")
data_Stroop_RT$trigger <- as.character(data_Stroop_RT$trigger) # To facilitate the analyses
data_Stroop_RT$group <- as.character(data_Stroop_RT$group)# To facilitate the analyses
str(data_Stroop_RT)
#datacleaning with robustlmm
library(dplyr)
data_Stroop_RT <- data_Stroop_RT%>%
mutate(RT = ifelse(RT > 0, RT, NA))
library(robustlmm)
model0.rob <- rlmer(RT ~ 1 + (1|subject)+(1|item.color), data = data_Stroop_RT)
summary(model0.rob)
plot(model0.rob)
plot(model_group.rob)
model_group.rob <- rlmer(RT ~ group + (1|subject)+(1|item.color), data = data_Stroop_RT)
summary(model_group.rob)
#plot(model_group.rob)
data_Stroop_RT$covar <- rnorm(dim(data_Stroop_RT)[1])
model_covar.rob <- rlmer(RT ~ covar*group + (1|subject)+(1|item.color), data = data_Stroop_RT)
summary(model_covar.rob)
#plot(model_covar.rob)
library(NPL)
fusion0=robust_weights(model0.rob)
fusiongroup=robust_weights(model_group.rob)
fusioncovar=robust_weights(model_covar.rob)
# Afficher le résultat final
print(head(fusion))
# Afficher le résultat final
print(head(fusion0))
print(head(fusiongroup))
print(head(fusioncovar))
library(psych)
describe(head(fusion))
describe(head(fusion0))
describe(head(fusiongroup))
describe(head(fusioncovar))
plot.weights(fusion, model0.rob)
library(NPL)
plot.weights(fusion, model0.rob)
library(NPL)
plot.weights(fusion, model0.rob)
library(NPL)
install.packages("H:/Recherches/Marina/dataclean/NPL/NPL_0.0.1.20.tar.gz", repos = NULL, type = "source")
remove.packages("NPL")
install.packages("H:/Recherches/Marina/dataclean/NPL/NPL_0.0.1.20.tar.gz", repos = NULL, type = "source")
install.packages("H:/Recherches/Marina/dataclean/NPL/NPL_0.0.1.20.tar.gz", repos = NULL, type = "source")
library(NPL)
plot.weights(fusion, model0.rob)
library(NPL)
library(NPL)
